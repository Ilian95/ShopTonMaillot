#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>



// Structure Produit
typedef struct {
  char nom[30];
  int num_ref;
  int qte;
  int prix;
  char taille[20];
} Produit;


//Affiche la liste des produits
void ListP(){
  FILE* f;
  char str[30];
  
  f = fopen("produit.txt", "r");
  if (f == NULL){
    printf("Ouverture du fichier impossible\n");
    exit(1);
  }

  printf("\nVoici la liste des produits :\n\n");
  
  while(fgets(str, 30, f) != NULL){ 
    printf("- %s", str);
  }
  printf("\n");

  fclose(f);
}


//Fonction permettant de chercher le stock d'un produit
void SearchStock(){
  char nom[30];
  char nomf[30];
  FILE* f = NULL;
  char stock[30];
  
  printf("\nSaisissez le nom du produit que vous recherchez:\n\n");
  scanf("%s",nom);

  strcpy(nomf, nom);
  strcat(nom, ".txt");

  f = fopen(nom, "r");
  if (f == NULL) {
    printf("\nLe produit que vous chercher n'existe pas.\n"); 
  } 
  else{
    fgets(stock, 30, f);
    fgets(stock, 30, f);
    fgets(stock, 30, f);
    printf("\nStock du produit %s : %s",nomf ,stock);
    fclose(f);
  }
}


//Fonction augmentant le stock d'un produit
void IncreaseStock(int sum, int Space){
  char nom[30];
  char nomf[30];
  FILE* f = NULL;
  char stock[30];
  int stock1, stock2, stockf;
  char numr[30];
  int numrf;
  char prix[30];
  int prixf;
  char taille[30];
  int taille2;

  printf("\n\nSaisissez le nom du produit dont vous voulez augmenter le stock:\n\n");
  scanf("%s",nom);

  strcpy(nomf, nom);
  strcat(nom, ".txt");

  f = fopen(nom, "r");
  if (f == NULL) {
    printf("\nLe produit que vous avez entré n'existe pas.\n");  
  }
  else{
    //Recupere les valeurs du produit
    fgets(stock, 30, f);
    fgets(numr, 30, f);
    fgets(stock, 30, f);
    fgets(prix, 30, f);
    fgets(taille, 30, f);
    fclose(f);

    //Remet en entier certaines valeures
    stock1 = atoi(stock);
    numrf = atoi(numr);
    prixf = atoi(prix);
    
    if((taille[strlen(taille) - 1] =='\n')||taille[strlen(taille) - 1] ==' '){
        taille[strlen(taille) - 1] = '\0';
    }
    if(strcmp(taille, "petit") == 0){
      taille2 = 1;
    }
    else if(strcmp(taille, "moyen") == 0){
      taille2 = 2;
    }
    else if(strcmp(taille, "grand") == 0){
       taille2 = 4;
    }
    
    printf("\nSaisissez de combien vous voulez augmentez (ou réduire) le stock de %s (Stock : %d):\n\n",nomf, stock1);
    scanf("%d",&stock2);
    stockf = stock1 + stock2;
    
    if(((stockf*taille2)+sum) > 1000){
      printf("\nErreur !!! Vous avez mit une quantité du produit trop  élevée\n\n<Opération annulée>\n");
      printf("\nPlace restante dans le magasin: %d \n",Space-sum);
    }
    else{
      printf("\nLe produit %s a maintenant un stock de : %d ;\n",nomf,stockf);
      //Remet les valeurs du produit dans son fichier
    f = fopen(nom, "w");
    fprintf(f, "%s \n",nomf);
    fprintf(f, "%d \n",numrf);
    fprintf(f, "%d \n",stockf);
    fprintf(f, "%d \n",prixf);
    fprintf(f, "%s",taille);
    fclose(f);
    }
  }
}


//Fonction calculant la place disponible dans le magasin
int DisplaySpace(){
  FILE* f = NULL;
  FILE* f2 = NULL;
  char str[30];
  char stock[30];
  int stock2;
  char taille[30];
  int taille2 = 0;
  int sum = 0;

  f = fopen("produit.txt", "r");
  if (f == NULL){
    printf("Ouverture du fichier impossible\n");
    exit(1);
  }

  while(fgets(str, 30, f) != NULL){
    if(str[strlen(str) - 1] =='\n'){
        str[strlen(str) - 1] = '\0';
    }
    strcat(str, ".txt");
    f2 = fopen(str, "r");
    if (f2 == NULL){
      printf("Ouverture du fichier impossible\n");
    }
    else{
      fgets(stock, 30, f2);
      fgets(stock, 30, f2);
      fgets(stock, 30, f2);
      fgets(taille, 30, f2);
      fgets(taille, 30, f2);
      
      if(taille[strlen(taille) - 1] =='\n'){
        taille[strlen(taille) - 1] = '\0';
      }
      if(strcmp(taille, "petit") == 0){
        taille2 = 1;
      }
      else if(strcmp(taille, "moyen") == 0){
        taille2 = 2;
      }
      else if(strcmp(taille, "grand") == 0){
        taille2 = 4;
      }
      
      stock2 = atoi(stock);
      sum += (stock2*taille2);
      fclose(f2);
    }
  }
  fclose(f);
  return sum;
}


// Fonction créant un produit
Produit CreateProduct(int sum, int Space) {
  Produit p;
  int taille2;

  printf("\nEntrer le nom du produit: \n\n");
  scanf("%s", p.nom);
  while(strlen(p.nom) > 30 || strlen(p.nom) <= 0){
    printf("\nErreur sur la saisie du nom : ");
    printf("\nEntrer à nouveau le nom du produit: \n\n");
    scanf("%s", p.nom);
  }
  //Choisi un num de ref aléatoire pour le produit
  p.num_ref = rand() % 1001 + 10000;
  //Choisi une quantité aléatoire pour le produit
  printf("\nSaisissez la quantité du produit ajouté: \n\n");
  scanf("%d", &p.qte);
  printf("\nEntrer le prix du produit: \n\n");
  scanf("%d", &p.prix);

  printf("\nEntrer la taille du produit : (petit, moyen ou grand) \n\n");
  scanf("%s", p.taille);
  while((strcmp(p.taille, "petit") != 0)&&(strcmp(p.taille, "moyen") != 0)&&(strcmp(p.taille, "grand") != 0)){
    printf("\nMauvaise saisie\n");
    printf("\nEntrer à nouveau la taille du produit : (petit, moyen  ou grand) \n\n");
  scanf("%s", p.taille);
  }

  if(p.taille[strlen(p.taille) - 1] =='\n'){
        p.taille[strlen(p.taille) - 1] = '\0';
      }
      if(strcmp(p.taille, "petit") == 0){
        taille2 = 1;
      }
      else if(strcmp(p.taille, "moyen") == 0){
        taille2 = 2;
      }
      else if(strcmp(p.taille, "grand") == 0){
        taille2 = 4;
      }
  if(((p.qte*taille2)+sum) > 1000){
      printf("\nErreur !!! Vous avez mit une quantité du produit trop  élevée\n\n<Opération annulée>\n");
      printf("\nPlace restante dans le magasin: %d \n",Space-sum);
    exit(1);
    }

  return p;
}


// Permet de stocker un produit dans un fichier
FILE* FileProduct(Produit p) {
  FILE *fichier;
  char nom[30];

  strcpy(nom,p.nom);
  
  strcat(nom, ".txt");
  fichier = fopen(nom, "w");

  // Verifie l'accessibilité du fichier
  if (fichier == NULL) {
    printf("Ouverture du fichier impossible\n");
    exit(1);
  }

  // Ecrit chaque valeur du produit dans un fichier
  fprintf(fichier, "%s \n", p.nom);
  fprintf(fichier, "%d \n", p.num_ref);
  fprintf(fichier, "%d \n", p.qte);
  fprintf(fichier, "%d \n", p.prix);
  fprintf(fichier, "%s", p.taille);
  
  fclose(fichier);

  FILE* fichier2 = fopen("produit.txt", "a");
  fprintf(fichier, "\n%s", p.nom);
  fclose(fichier2);

  return fichier;
}

//Lance le mode gestion
void Gestion(){
  Produit p;
  int Space = 1000;
  int choix;
  int sum = DisplaySpace();
  
  printf("            ACCEUIL                \n\n");
  printf("Place restante dans le magasin : %d\n\n", Space-sum);
  printf("Appuyer sur 1 pour la liste des produits; \n \nAppuyer sur 2 pour chercher le stock d'un produit; \n \nAppuyer sur 3 pour augmenter le stock d'un produit; \n \nAppuyer sur 4 pour afficher la place disponible dans   le magasin; \n \nAppuyer sur 5 pour ajouter un produit; \n \nAppuyer sur 6 pour quitter;\n \n");
  scanf("%d", &choix);

  switch(choix){
    case 1:
      ListP();
      printf("\nRetour à l'acceuil...\n\n");
      printf("##################################### \n\n");
      Gestion();
      break;
    case 2:
      SearchStock();
      printf("\nRetour à l'acceuil...\n\n");
      printf("##################################### \n\n");
      Gestion();
      break;
    case 3:
      IncreaseStock(sum, Space);
      sum = DisplaySpace();
      printf("\nLe magasin a un stock Occupé de %d / %d Libre. \n",sum, Space);
      printf("\nRetour à l'acceuil...\n\n");
      printf("##################################### \n\n");
      Gestion();
      break;
    case 4:
      printf("\nLe magasin a un stock Occupé de %d / %d Libre. \n",sum, Space);
      printf("\nRetour à l'acceuil...\n\n");
      printf("##################################### \n\n");
      Gestion();
      break;
    case 5:
      p = CreateProduct(sum, Space);
      printf("\n<Produit créé>\n");
      FILE* f = FileProduct(p);
      printf("\n<Produit enregistré dans un fichier>\n");
      printf("\nRetour à l'acceuil...\n\n\n");
      printf("##################################### \n\n");
      Gestion();
      break;
    case 6:
      printf("\nPassez une bonne journée, au revoir ! \n");
      break;
    default:
      printf("\nErreur de saisie... \n");
      printf("\nRetour à l'acceuil...\n\n");
      printf("##################################### \n\n");
      Gestion();
      break;
  }
}


int main(void) {
  srand(time(NULL));

  //Choix du mode
  char mode[30];  
  printf("\nBonjour !\n\nChoisissez entre mode gestion ou mode achat: \n\n");
  scanf("%s",mode);

  if(strcmp(mode, "gestion") == 0) {
    printf("\n");
    printf("##################################### \n");
    printf("             MODE GESTION \n");
    printf("##################################### \n");
    printf("\n");
    Gestion();
  }
  else if(strcmp(mode, "achat") == 0) {
    printf("\n");
    printf("##################################### \n");
    printf("             MODE ACHAT \n");
    printf("##################################### \n");
    printf("\n");
  }
  else{
    printf("Erreur de saisie... \n");
    exit(1);
  }
  
  return 0;
}

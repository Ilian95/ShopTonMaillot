#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>



// Structure Produit
typedef struct {
  char nom[30];
  int num_ref;
  int qte;
  int prix;
  char taille[20];
} Produit;


//Affiche la liste des produits
void ListP(){
  FILE* f;
  f = fopen("produit.txt", "r");
  if (f == NULL){
    printf("Ouverture du fichier impossible\n");
    exit(1);
  }

  printf("\nVoici la liste des produits :\n\n");
  
  char str[30];
  while(fgets(str, 30, f) != NULL){ 
    printf("- %s", str);
  }
  printf("\n");

  fclose(f);
}


//Fonction permettant de chercher le stock d'un produit
void SearchStock(){
  char nom[30];
  char nomf[30];
  FILE* f = NULL;
  char stock[30];
  
  printf("\nSaisissez le nom du produit que vous recherchez:\n\n");
  scanf("%s",nom);

  strcpy(nomf, nom);
  strcat(nom, ".txt");

  f = fopen(nom, "r");
  if (f == NULL) {
    printf("Le produit que vous chercher n'existe pas.\n");  
  } 
  else{
    fgets(stock, 30, f);
    fgets(stock, 30, f);
    fgets(stock, 30, f);
    printf("\nStock du produit %s : %s",nomf ,stock);
  }
  fclose(f);
}


//Fonction augmentant le stock d'un produit
void IncreaseStock(){
  char nom[30];
  char nomf[30];
  FILE* f;
  char stock[30];
  int stock1, stock2, stockf;

  printf("\n\nSaisissez le nom du produit dont vous voulez augmenter le stock:\n\n");
  scanf("%s",nom);

  strcpy(nomf, nom);
  strcat(nom, ".txt");

  f = fopen(nom, "r");
  if (f == NULL) {
    printf("\nLe produit que vous avez entré n'existe pas.\n");  
  }
  else{
    fgets(stock, 30, f);
    fgets(stock, 30, f);
    fgets(stock, 30, f);
    stock1 = atoi(stock);
    printf("\nSaisissez de combien vous voulez augmentez le stock de %s:\n\n",nomf);
    scanf("%d",&stock2);
    stockf = stock1 + stock2;
    printf("\nLe produit %s a maintenant un stock de %d + %d = %d ;\n",nomf,stock1,stock2,stockf);
  }
}


// Fonction créant un produit
Produit CreateProduit() {
  Produit p;

  printf("\nEntrer le nom du produit: \n\n");
  scanf("%s", p.nom);
  while(strlen(p.nom) > 30 || strlen(p.nom) <= 0){
    printf("\nErreur sur la saisie du nom : ");
    printf("\nEntrer à nouveau le nom du produit: \n\n");
    scanf("%s", p.nom);
  }
  //Choisi un num de ref aléatoire pour le produit
  p.num_ref = rand() % 1001 + 10000;
  //Choisi une quantité aléatoire pour le produit
  printf("\nSaisissez la quantité du produit ajouté: \n\n");
  scanf("%d", &p.qte);
  printf("\nEntrer le prix du produit: \n\n");
  scanf("%d", &p.prix);

  printf("\nEntrer la taille du produit : (petit, moyen ou grand) \n\n");
  scanf("%s", p.taille);
  while((strcmp(p.taille, "petit") != 0)&&(strcmp(p.taille, "moyen") != 0)&&(strcmp(p.taille, "grand") != 0)){
    printf("\nMauvaise saisie\n");
    printf("\nEntrer à nouveau la taille du produit : (petit, moyen  ou grand) \n\n");
  scanf("%s", p.taille);
  }

  return p;
}


// Permet de stocker un produit dans un fichier
FILE* FichierProduit(Produit p) {
  FILE *fichier;
  char nom[30];

  strcpy(nom,p.nom);
  
  strcat(nom, ".txt");
  fichier = fopen(nom, "w");

  // Verifie l'accessibilité du fichier
  if (fichier == NULL) {
    printf("Ouverture du fichier impossible\n");
    exit(1);
  }

  // Ecrit chaque valeur du produit dans un fichier
  fprintf(fichier, "%s \n", p.nom);
  fprintf(fichier, "%d \n", p.num_ref);
  fprintf(fichier, "%d \n", p.qte);
  fprintf(fichier, "%d \n", p.prix);
  fprintf(fichier, "%s \n", p.taille);
  
  fclose(fichier);

  FILE* fichier2 = fopen("produit.txt", "a");
  fprintf(fichier, "\n%s", p.nom);
  fclose(fichier2);

  return fichier;
}


//Lance le mode gestion
void Gestion(){
  Produit p;

  int choix;
  printf("            ACCEUIL                \n\n");
  printf("Appuyer sur 1 pour la liste des produits; \n \nAppuyer sur 2 pour chercher le stock d'un produit; \n \nAppuyer sur 3 pour augmenter le stock d'un produit; \n \nAppuyer sur 4 pour afficher la place disponible dans   le magasin; \n \nAppuyer sur 5 pour ajouter un produit; \n \nAppuyer sur 6 pour quitter;\n \n");
  scanf("%d", &choix);

  switch(choix){
    case 1:
      ListP();
      printf("\nRetour à l'acceuil...\n\n");
      printf("##################################### \n\n");
      Gestion();
      break;
    case 2:
      SearchStock();
      printf("\nRetour à l'acceuil...\n\n");
      printf("##################################### \n\n");
      Gestion();
      break;
    case 3:
      IncreaseStock();
      printf("\nRetour à l'acceuil...\n\n");
      printf("##################################### \n\n");
      Gestion();
      break;
    case 4:
      DisplaySpace();
      printf("\nRetour à l'acceuil...\n\n");
      printf("##################################### \n\n");
      Gestion();
      break;
    case 5:
      p = CreateProduit();
      printf("\n<Produit créé>\n");
      FILE* f = FichierProduit(p);
      printf("\n<Produit enregistré dans un fichier>\n");
      printf("\nRetour à l'acceuil...\n\n\n");
      printf("##################################### \n\n");
      Gestion();
      break;
    case 6:
      printf("\nPassez une bonne journée, au revoir ! \n");
      break;
    default:
      printf("\nErreur de saisie... \n");
      printf("\nRetour à l'acceuil...\n\n");
      printf("##################################### \n\n");
      Gestion();
      break;
  }
}



// Structure Client
typedef struct{
  char nom[50];
  char prenom[50];
  char historique_achat[2];
}Client;


// Fonction qui crée un client 
Client créer_client(){
  Client client;
  printf("Entrer le nom du client \n");
  scanf("%s",client.nom);
  printf("Entrer le prénom du client \n");
  scanf("%s",client.prenom);
  return client;
}

// Permet de stocker un client dans fichier
FILE* FichiersClient(Client client){
  FILE* fichier;
    char nom[50];

  printf("Saisissez le nom du fichier pour le client: %s %s \n", client.nom,client.prenom);
  scanf("%s.txt", nom);

  fichier = fopen(nom, "w");

  // Verifie l'accessibilité du fichier
  if (fichier == NULL) {
    printf("Ouverture du fichier impossible\n");
    exit(1);
  }

  // Ecrit les données du client dans un fichier
  fprintf(fichier, "%s \n", client.nom);
  fprintf(fichier, "%s \n", client.prenom);

  return fichier;
}


  // Mode Achat

  void Achat(){

    printf("\n");
    printf("##################################### \n");
    printf("             MODE ACHAT \n");
    printf("##################################### \n");
    printf("\n");
    
    char** historique_achat=NULL;
    int choix1;
    printf("Appuyer sur 1 si vous déja un compte sinon appuyer sur 2 pour créer votre compte.\n ");
    scanf("%d",&choix1);
    

    switch(choix1){
      case 1 :
        printf("Vos derniers achat sont : %s \n", **historique_achat);
        break;
      
      case 2 :
        printf("Vous allez créer votre compte\n");
        Client client=créer_client();
        FILE*fichierclient=FichiersClient(client);
        break;
      
      default :
        printf("Erreur de saisie...");
        Achat();
        break;
    }
}




int main(void) {
  srand(time(NULL));
  int Space = 80;

  // Crée client 1
  FILE *fichierclient1;
  Client client1 = créer_client();
  fichierclient1=FichiersClient(client1);
  
  //Choix du mode
  char mode[30];  
  printf("\nBonjour !\n\nChoisissez entre mode gestion ou mode achat: \n\n");
  scanf("%s",mode);

  if(strcmp(mode, "gestion") == 0) {
    printf("\n");
    printf("##################################### \n");
    printf("             MODE GESTION \n");
    printf("##################################### \n");
    printf("\n");
    Gestion();
  }
  else if(strcmp(mode, "achat") == 0) {
    printf("Bienvenue dans le mode achat \n");
    Achat();
  }
  else{
    printf("Erreur de saisie... \n");
    exit(1);
  }

  //Supprime le contenu du fichier produit.txt
  FILE* f = fopen("produit.txt", "w");
  fclose(f);

  return 0;
}
